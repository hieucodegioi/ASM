/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.QLSVController;
import Model.Province;
import Model.QLSV;
import Model.Student;
import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.Action;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hieud
 */
public class QLSVView extends JFrame {

    public JPanel contentPane;
    public QLSV model;
    public ButtonGroup btn_gioitinh;

    /**
     * Creates new form QLSVView
     */
    public QLSVView() {
        this.model = new QLSV();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 450, 300);

        Action action = new QLSVController(this);

        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        contentPane.setLayout(new BorderLayout(0, 0));
        setContentPane(contentPane);

        this.setVisible(true);
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(300, 1), new java.awt.Dimension(300, 1), new java.awt.Dimension(300, 1));
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TextID = new javax.swing.JTextField();
        TextName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        TextEinglish = new javax.swing.JTextField();
        TextMath = new javax.swing.JTextField();
        TextLiterature = new javax.swing.JTextField();
        Textphysics = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        TextChemistry = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        RadioButton_Nam = new javax.swing.JRadioButton();
        btn_gioitinh = new ButtonGroup();
        RadioButton_Nu = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        updateButton = new java.awt.Button();
        saveButton = new java.awt.Button();
        AverageButton = new java.awt.Button();
        Action action = new QLSVController(this);
        DeleteButton = new java.awt.Button();
        insertButton = new java.awt.Button();
        buttonFind = new javax.swing.JButton();
        textFind = new javax.swing.JTextField();
        Town_comboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        Jpnstatus = new javax.swing.JLabel();
        RemoveButton1 = new java.awt.Button();
        jLabel13 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuFile = new javax.swing.JMenu();
        MenuOpen = new javax.swing.JMenuItem();
        MenuSave = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(300, 300));
        setPreferredSize(new java.awt.Dimension(840, 1050));
        setResizable(false);
        getContentPane().setLayout(null);
        getContentPane().add(filler2);
        filler2.setBounds(481, 51, 300, 1);

        jSeparator1.setForeground(new java.awt.Color(255, 153, 153));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(30, 580, 760, 10);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StuCode", "Name", "Town", "Sex", "Maths", "Physics", "Chemistry", "English", "Literature"
            }
        ));
        Table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Table.setGridColor(new java.awt.Color(0, 0, 0));
        Table.setIntercellSpacing(new java.awt.Dimension(1, 1));
        jScrollPane1.setViewportView(Table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 130, 810, 230);

        jLabel1.setBackground(new java.awt.Color(255, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setText("Student Managerment");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 10, 290, 42);

        jLabel3.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel3.setText("StudentCode");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(430, 70, 100, 26);

        jLabel6.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel6.setText("Sex");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 510, 50, 30);

        jLabel7.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel7.setText("Home Town");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 470, 100, 30);
        getContentPane().add(TextID);
        TextID.setBounds(110, 390, 160, 30);

        TextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNameActionPerformed(evt);
            }
        });
        getContentPane().add(TextName);
        TextName.setBounds(110, 430, 160, 30);

        jLabel8.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel8.setText("Maths");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(320, 390, 80, 30);

        jLabel9.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel9.setText("Physics");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(320, 430, 60, 30);

        jLabel10.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel10.setText("Literature");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(320, 510, 80, 30);

        jLabel11.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel11.setText("English");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(320, 470, 60, 30);
        getContentPane().add(TextEinglish);
        TextEinglish.setBounds(400, 470, 160, 30);
        getContentPane().add(TextMath);
        TextMath.setBounds(400, 390, 160, 30);

        TextLiterature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextLiteratureActionPerformed(evt);
            }
        });
        getContentPane().add(TextLiterature);
        TextLiterature.setBounds(400, 510, 160, 30);
        getContentPane().add(Textphysics);
        Textphysics.setBounds(400, 430, 160, 30);

        jLabel12.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel12.setText("Chemistry");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(580, 390, 90, 30);

        TextChemistry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextChemistryActionPerformed(evt);
            }
        });
        getContentPane().add(TextChemistry);
        TextChemistry.setBounds(660, 390, 160, 30);

        jSeparator2.setForeground(new java.awt.Color(255, 153, 153));
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(30, 60, 760, 12);

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel2.setText("Status");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 600, 70, 33);

        RadioButton_Nam.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        RadioButton_Nam.setText("Male");
        RadioButton_Nam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButton_NamActionPerformed(evt);
            }
        });
        btn_gioitinh.add(RadioButton_Nam);
        getContentPane().add(RadioButton_Nam);
        RadioButton_Nam.setBounds(110, 510, 70, 30);

        RadioButton_Nu.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        RadioButton_Nu.setText("Female");
        RadioButton_Nu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButton_NuActionPerformed(evt);
            }
        });
        btn_gioitinh.add(RadioButton_Nu);
        getContentPane().add(RadioButton_Nu);
        RadioButton_Nu.setBounds(180, 510, 70, 30);

        jSeparator3.setForeground(new java.awt.Color(255, 153, 153));
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 650, 760, 10);

        jSeparator4.setForeground(new java.awt.Color(255, 153, 153));
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(30, 370, 760, 10);

        updateButton.setBackground(new java.awt.Color(255, 153, 153));
        updateButton.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        updateButton.setLabel("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        updateButton.addActionListener(action);
        getContentPane().add(updateButton);
        updateButton.setBounds(270, 670, 100, 50);

        saveButton.setBackground(new java.awt.Color(255, 153, 153));
        saveButton.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        saveButton.setLabel("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        saveButton.addActionListener(action);
        getContentPane().add(saveButton);
        saveButton.setBounds(390, 670, 100, 50);

        AverageButton.setBackground(new java.awt.Color(255, 153, 153));
        AverageButton.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        AverageButton.setLabel("Average");
        AverageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AverageButtonActionPerformed(evt);
            }
        });
        AverageButton.addActionListener(action);
        getContentPane().add(AverageButton);
        AverageButton.setBounds(630, 670, 100, 50);

        DeleteButton.setBackground(new java.awt.Color(255, 153, 153));
        DeleteButton.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        DeleteButton.setLabel("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        DeleteButton.addActionListener(action);
        getContentPane().add(DeleteButton);
        DeleteButton.setBounds(150, 670, 100, 50);

        insertButton.setBackground(new java.awt.Color(255, 153, 153));
        insertButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        insertButton.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        insertButton.setLabel("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });
        insertButton.addActionListener(action);
        getContentPane().add(insertButton);
        insertButton.setBounds(30, 670, 100, 50);

        buttonFind.setBackground(new java.awt.Color(255, 153, 153));
        buttonFind.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        buttonFind.setText("Find");
        buttonFind.setToolTipText("");
        buttonFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFindActionPerformed(evt);
            }
        });
        buttonFind.addActionListener(action);
        getContentPane().add(buttonFind);
        buttonFind.setBounds(720, 70, 60, 20);

        textFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFindActionPerformed(evt);
            }
        });
        getContentPane().add(textFind);
        textFind.setBounds(530, 70, 180, 22);

        Town_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        Town_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Town_comboBoxActionPerformed(evt);
            }
        });
        ArrayList<Province> provinceList = Province.getProvinceList();
        for (Province province : provinceList ){
            Town_comboBox.addItem(province.getProName());
        }
        getContentPane().add(Town_comboBox);
        Town_comboBox.setBounds(110, 472, 160, 30);

        jLabel4.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel4.setText("StudentCode");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 390, 100, 30);

        Jpnstatus.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        getContentPane().add(Jpnstatus);
        Jpnstatus.setBounds(100, 600, 170, 40);

        RemoveButton1.setBackground(new java.awt.Color(255, 153, 153));
        RemoveButton1.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        RemoveButton1.setLabel("Remove");
        RemoveButton1.addActionListener(action);
        RemoveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButton1ActionPerformed(evt);
            }
        });
        AverageButton.addActionListener(action);
        getContentPane().add(RemoveButton1);
        RemoveButton1.setBounds(510, 670, 100, 50);

        jLabel13.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        jLabel13.setText("Name");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(10, 430, 90, 30);

        MenuFile.setText("File");
        MenuFile.addActionListener(action);

        MenuOpen.setText("Open");
        MenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuOpenActionPerformed(evt);
            }
        });
        MenuOpen.addActionListener(action);
        MenuFile.add(MenuOpen);

        MenuSave.setText("SaveFile");
        MenuSave.setToolTipText("");
        MenuSave.addActionListener(action);
        MenuFile.add(MenuSave);

        jMenuBar1.add(MenuFile);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuOpenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuOpenActionPerformed

    private void TextLiteratureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextLiteratureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextLiteratureActionPerformed

    private void TextChemistryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextChemistryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextChemistryActionPerformed

    private void RadioButton_NamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButton_NamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadioButton_NamActionPerformed

    private void RadioButton_NuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButton_NuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadioButton_NuActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void AverageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AverageButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AverageButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertButtonActionPerformed

    private void TextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNameActionPerformed

    private void textFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFindActionPerformed

    private void Town_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Town_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Town_comboBoxActionPerformed

    private void buttonFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonFindActionPerformed

    private void RemoveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RemoveButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    QLSVView frame = new QLSVView();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button AverageButton;
    private java.awt.Button DeleteButton;
    private javax.swing.JLabel Jpnstatus;
    private javax.swing.JMenu MenuFile;
    private javax.swing.JMenuItem MenuOpen;
    public javax.swing.JMenuItem MenuSave;
    public javax.swing.JRadioButton RadioButton_Nam;
    public javax.swing.JRadioButton RadioButton_Nu;
    public java.awt.Button RemoveButton1;
    private javax.swing.JTable Table;
    public javax.swing.JTextField TextChemistry;
    public javax.swing.JTextField TextEinglish;
    public javax.swing.JTextField TextID;
    public javax.swing.JTextField TextLiterature;
    public javax.swing.JTextField TextMath;
    public javax.swing.JTextField TextName;
    public javax.swing.JTextField Textphysics;
    public javax.swing.JComboBox<String> Town_comboBox;
    public javax.swing.JButton buttonFind;
    private javax.swing.Box.Filler filler2;
    private java.awt.Button insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private java.awt.Button saveButton;
    public javax.swing.JTextField textFind;
    public java.awt.Button updateButton;
    // End of variables declaration//GEN-END:variables

    public void deleteForm() {
        TextID.setText("");
        TextName.setText("");
        TextMath.setText("");
        TextChemistry.setText("");
        TextEinglish.setText("");
        TextLiterature.setText("");
        Textphysics.setText("");
        Town_comboBox.setSelectedIndex(-1);
        btn_gioitinh.clearSelection();

    }

    public void addOrUpdateStudent(Student student) {
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        if (!this.model.checkforExistence(student)) {
        this.model.insert(student);
        
        model_table.addRow(
                new Object[]{
                    student.getStuCode() + "",
                    student.getStuName(),
                    student.getStuHomeTown().getProName(),
                    (student.isStuSex() ? "Male" : "Female"),
                    student.getMaths() + "",
                    student.getPhysics() + "",
                    student.getChemistry() + "",
                    student.getEnglish() + "",
                    student.getLiterature() + ""
                });
        this.deleteForm();
        }else {
            int choose = JOptionPane.showConfirmDialog(this, "Are you want to update ?");
        
            if (choose == JOptionPane.YES_OPTION) {
                Jpnstatus.setText("Added!");
            this.model.insert(student);
            int lineLenght = model_table.getRowCount();
            for (int i = 0; i < lineLenght; i++) {
                String id = model_table.getValueAt(i, 0)+"";
                if (id.equals(student.getStuCode()+"")) {
                    model_table.setValueAt(student.getStuCode(), i, 0);
                    model_table.setValueAt(student.getStuName(), i, 1);
                    model_table.setValueAt(student.getStuHomeTown().getProName(), i, 2);
                    model_table.setValueAt(student.isStuSex() ? "Male" : "Female", i, 3);
                    model_table.setValueAt(student.getMaths(), i, 4);
                    model_table.setValueAt(student.getPhysics(), i, 5);
                    model_table.setValueAt(student.getChemistry(), i, 6);
                    model_table.setValueAt(student.getEnglish(), i, 7);
                    model_table.setValueAt(student.getLiterature(), i, 8);
                    
                  
                }
            }
            }else {
                TextID.setText("");
                Jpnstatus.setText("Customer ID already exists!");
            }
    }
    }

    public void showInfo() {
        Student stu = getStu();
        // TODO Auto-generated method stub
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        int i_row = Table.getSelectedRow();

        this.TextID.setText(stu.getStuCode() + "");
        this.TextName.setText(stu.getStuName()+ "");
        this.Town_comboBox.setSelectedItem(stu.getStuHomeTown().getProName());
        if (stu.isStuSex()) {
            RadioButton_Nam.setSelected(true);
        } else {
            RadioButton_Nu.setSelected(true);
        }

        this.TextMath.setText(stu.getMaths() + "");
        this.Textphysics.setText(stu.getPhysics() + "");
        this.TextChemistry.setText(stu.getChemistry() + "");
        this.TextEinglish.setText(stu.getEnglish() + "");
        this.TextLiterature.setText(stu.getLiterature() + "");

    }

    public void actionDelete() {
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        int choose = JOptionPane.showConfirmDialog(this, "Are you sure to delete this customer?");
        if (choose == JOptionPane.YES_OPTION) {
            removeRow();
            deleteRow();

        }
        this.TextID.setText("");
        this.TextName.setText("");
        this.Town_comboBox.setSelectedItem("");
        btn_gioitinh.clearSelection();

        this.TextMath.setText("");
        this.Textphysics.setText("");
        this.TextChemistry.setText("");
        this.TextEinglish.setText("");
        this.TextLiterature.setText("");
}

    private void removeRow() {
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        int rowCount = model_table.getRowCount();
        Student ctm = getStu();

        for (int i = 0; i < rowCount; i++) {
            String id = model_table.getValueAt(i, 0) + "";
            if (id.equals(ctm.getStuCode()+ "")) {
                model_table.setValueAt("", i, 0);
                model_table.setValueAt("", i, 1);
                model_table.setValueAt("", i, 2);
                model_table.setValueAt("", i, 3);
                model_table.setValueAt("", i, 4);
                model_table.setValueAt("", i, 5);
                model_table.setValueAt("", i, 6);
                model_table.setValueAt("", i, 7);
                this.model.delete(ctm);
            }
        }    }

    public void deleteRow() {
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        int i_row = Table.getSelectedRow();
        model_table.removeRow(i_row);    
    }

    public Student getStu() {
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        int i_row = Table.getSelectedRow();

        int stuCode = Integer.valueOf(model_table.getValueAt(i_row, 0) + "");
        String stuName = model_table.getValueAt(i_row, 1) + "";
        Province province = Province.getProvinceByName(model_table.getValueAt(i_row, 2) + "");
        String textSex = model_table.getValueAt(i_row, 3) + "";
        boolean sex = textSex.equals("Male");
        float maths = Float.valueOf(model_table.getValueAt(i_row, 4) + "");
        float physics = Float.valueOf(model_table.getValueAt(i_row, 5) + "");
        float chemistry = Float.valueOf(model_table.getValueAt(i_row, 6) + "");
        float english = Float.valueOf(model_table.getValueAt(i_row, 7) + "");
        float literature = Float.valueOf(model_table.getValueAt(i_row, 8) + "");
        
        Student student = new Student(stuCode, stuName, province, sex, maths, physics, chemistry, english, literature);
        return student;
    }
  
    
    public void stuSearch() {
        int location = -1;
        String stuID = this.textFind.getText();
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        int rowCount = model_table.getRowCount();

        if (stuID.length() > 0) {
            for (int i = 0; i < rowCount; i++) {
                String id = model_table.getValueAt(i, 0) + "";
                if (stuID.equals(id)) {
                    location = i;
                    break;
                }
            }
            if (location >= 0) {
                Table.setRowSelectionInterval(location, location);
                showInfo();
            } else {
                JOptionPane.showMessageDialog(this, "Not found id: " + stuID + " !!");
            }

        }
    }
    
    public void openFile(String path) {
        File file = new File(path);
        try {
            this.model.setChoose(path);
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            Object[] lines = br.lines().toArray();

            for (int i = 0; i < lines.length; i++) {
                String[] row = lines[i].toString().split(" ");
                model.addRow(row);
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    public void actionOpenFile() {
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            openFile(file.getAbsolutePath());
        }
    }
    public void saveFile(String path) {
        File file = new File(path);
        try {
            this.model.setChoose(path);
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            for (int i = 0; i < Table.getRowCount(); i++) {//rows
                for (int j = 0; j < Table.getColumnCount(); j++) {//columns
                    bw.write(Table.getValueAt(i, j).toString() + " ");
                }
                bw.newLine();
            }

            bw.close();
            fw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void actionSaveFile() {
        if (this.model.getChoose().length() > 0) {
            saveFile(this.model.getChoose());
        } else {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                saveFile(file.getAbsolutePath());
            }
        }
    }

    public static double calculateAverage(double[] grades) {
        double sum = 0;
        for (int i = 0; i < grades.length; i++) {
            sum += grades[i];
        }
        double average = sum / grades.length;
        return average;
    }
    public void tinhTrungBinh(){
        DefaultTableModel model_table = (DefaultTableModel) Table.getModel();
        int i_row = Table.getSelectedRow();
        float maths = Float.valueOf(model_table.getValueAt(i_row, 4) + "");
        float physics = Float.valueOf(model_table.getValueAt(i_row, 5) + "");
        float chemistry = Float.valueOf(model_table.getValueAt(i_row, 6) + "");
        float english = Float.valueOf(model_table.getValueAt(i_row, 7) + "");
        float literature = Float.valueOf(model_table.getValueAt(i_row, 8) + "");
        
        double[] grades = {maths,physics,chemistry,english,literature};
        
        double average = calculateAverage(grades);
        
        JOptionPane.showMessageDialog(null, "Điểm trung bình của 5 môn học là: " + average);
    }

}
